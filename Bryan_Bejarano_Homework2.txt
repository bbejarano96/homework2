Bryan Bejarano Homework#2:1.)HTML:<div class="form">  <fieldset>    <label>Number 3:</label>    <input type="text" id="num3">  </fieldset>  <fieldset>    <label>Number 4:</label>    <input type="text" id="num4">  </fieldset>  <fieldset>    <button id="multiply" onclick="multiplyNums()">Click to Multiply</button>    <h3>Result</h3>    <span id="result2">Result here</span>  </fieldset></div>JavaScript:const multiplyNums = () => {    let num3 = document.getElementById("num3").value;    let num4 = document.getElementById("num4").value;    let multiply = num3 * num4;    document.getElementById("result2").innerHTML = multiply;};- The function keyword in this code is multiplyNums()- getElementById gets the element with the specific ID and returns the ID attribute with the specified value.- .value is the value attribute from the input tag.- Input tag’s value attribute provided by the user in the input field.- innerHTML / “Result Here” to the sum of the multiplyNums function.2.) Var value is not valid because it says it’s reserved.	$ JavaScript identifiers are valid. It is identified as an object.	Letters are valid identifier.3.) var x = 10{	var x = 2;	}x is 2- x declared in the block- is the same as the x declared from outside the blockvar x = 10;{	let x = 2;}x is 10 - x declared in the block- not the same as the x declared from outside the block var x = 10;{	const x = 2;	}- x declared in the block- is not the same as the x declared from outside the block4.)var global = 10; function fun (){var local = 5;}       - var global   <-- variables declared Globally.      - var local  <-- local function scope.let x = 1;{let x = 2;console.log(x);}console.log(x);	- let x = 1 <-- global         {       - let x = 2 <-- local- console.log(x) = <-- 2 }- console.log(x) = <-- 1